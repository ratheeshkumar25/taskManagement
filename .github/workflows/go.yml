name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Dependencies
        run: go mod tidy

      - name: Build
        run: go build -v ./...

      - name: Run Tests
        run: go test -v ./... -cover

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo "JWTKEY=${{ secrets.JWTKEY }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "REDISHOST=${{ secrets.REDISHOST }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env

      - name: Build and push Docker image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/task-management:v1.0"
          echo "ðŸš€ Building and pushing Docker image: $IMAGE_NAME"
          
          docker build -t "$IMAGE_NAME" .
          docker push "$IMAGE_NAME"

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment
        run: curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
